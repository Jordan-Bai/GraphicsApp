#version 460

//uniform vec3 sunDirection;
//uniform vec3 cameraPos;
//uniform float specPower;

uniform sampler2D albedoMap; // The base colour texture of the object
uniform sampler2D specularMap; // The specular highlight map of the object
uniform sampler2D normalMap;

in vec3 pos;
in vec3 normal;
in vec3 tangent;
in vec3 biTangent;
in vec2 UVCoord;

out vec4 PixelColour;

void main()
{
	vec3 normalColour = texture(normalMap, UVCoord).rgb;
	normalColour = (normalColour * 2) - 1; // Remap to -1 to 1
	
	vec3 t = normalize(tangent);
	vec3 b = normalize(biTangent);
	vec3 n = normalize(normal);
	mat3 TBNmat = mat3(t, b, n);
	vec3 relativeNormal = TBNmat * normalColour;
	//relativeNormal = normalize(relativeNormal);
	
	vec3 relativeNormalColour = (relativeNormal * 0.5) + 0.5; // Remap back to 0 to 1
	
	PixelColour = vec4(relativeNormalColour, 1.0);
	//PixelColour = vec4(UVCoord, 0.0, 1.0); // Good for debugging
}