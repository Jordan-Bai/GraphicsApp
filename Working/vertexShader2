#version 460

layout(location = 0) in vec3 vertPos;
layout(location = 1) in vec3 vertNormal;
layout(location = 2) in vec3 vertTangent;
layout(location = 3) in vec2 vertUVCoord;

uniform mat4 vpMat;
uniform mat4 modelMat;

out vec3 pos;
out vec3 normal;
out vec3 tangent;
out vec3 biTangent;
out vec2 UVCoord;

void main()
{
	vec4 normVec4 = modelMat * vec4(vertNormal, 0.0);
	normal = vec3(normVec4.x, normVec4.y, normVec4.z);
	tangent = vertTangent;
	UVCoord = vertUVCoord;
	
	mat4 mvpMat = vpMat * modelMat;
	vec4 transformedPos = mvpMat * vec4(vertPos, 1.0);
	pos = transformedPos.xyz;
	tangent = (mvpMat * vec4(vertTangent, 1.0)).xyz;
	biTangent = cross(normal, tangent);
	
	gl_Position = transformedPos;
}